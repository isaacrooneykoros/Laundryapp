<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="com.obiscr.chatgpt.settings.EasyCodeState">
    <option name="projectFiles" value="$PROJECT_DIR$/app/src/androidTest/java/com/example/cleanhomes111/ExampleInstrumentedTest.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/bankningappui/data/BottomNavigation.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/bankningappui/data/Card.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/bankningappui/data/Clothing.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/bankningappui/data/Finance.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/bankningappui/ui/theme/Color.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/bankningappui/ui/theme/Theme.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/bankningappui/ui/theme/Type.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/bankningappui/BottomNavigationBar.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/bankningappui/CardsSection.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/bankningappui/CurrenciesSection.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/bankningappui/FinanceSection.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/bankningappui/MainActivity.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/bankningappui/WalletSection.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/ui/theme/data/AccountViewModel.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/ui/theme/data/AuthViewModel.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/ui/theme/models/Account.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/ui/theme/models/User.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/ui/theme/navigation/AppNavHost.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/ui/theme/navigation/Routes.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/ui/theme/screens/Dashboard.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/ui/theme/screens/Loginscreen.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/ui/theme/screens/Signupscreen.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/ui/theme/screens/Splashscreen.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/ui/theme/screens/Walletscreen.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/ui/theme/Color.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/ui/theme/Theme.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/ui/theme/Type.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/main/java/com/example/cleanhomes111/MainActivity.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/src/test/java/com/example/cleanhomes111/ExampleUnitTest.kt;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/build.gradle.kts;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/app/google-services.json;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/build.gradle.kts;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/google-services (2).json;C:/Users/Admin/AndroidStudioProjects/CleanHomes111/settings.gradle.kts" />
    <option name="forceFullIndex" value="false" />
    <option name="fileSummaryMaps" value="{&quot;C:/Users/Admin/AndroidStudioProjects/CleanHomes111&quot;:&quot;{\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/screens/Signupscreen.kt\&quot;:\&quot;This file contains a Composable function `SignupScreen` that represents the signup screen of an application. It includes the following:\\n\\n`SignupScreen`: This function creates a signup screen with input fields for name, email, password, and confirm password, as well as buttons for signing up and navigating to the login screen.\\n\\nThe file also includes a `SignupScreenPreview` Composable function that provides a preview of the `SignupScreen` function.\\n\\nOverall, this file is responsible for the implementation of the signup screen in the application, allowing users to create an account by entering their personal information.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/Type.kt\&quot;:\&quot;This file defines the typography styles for a Jetpack Compose-based Android application. It sets the default text style for the `bodyLarge` component, and provides commented-out examples for other text styles such as `titleLarge` and `labelSmall`.\\n\\n`Typography`: Defines the set of Material typography styles to be used in the application.\&quot;,\&quot;/app/google-services.json\&quot;:\&quot;This file appears to be a JSON configuration file for a Firebase project. It does not contain any classes or functions, but rather provides information about the project, such as the project number, project ID, and storage bucket. The file also includes client information, such as the mobile SDK app ID and the Android client package name. Additionally, it includes an API key and information about the app invite service. Overall, this file is used to configure the Firebase project and its associated services.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/data/AuthViewModel.kt\&quot;:\&quot;This file contains a single class `AuthViewModel` and several functions within it. Here\\u0027s a summary of each:\\n\\n`AuthViewModel`: A class that handles user authentication and navigation within the application.\\n\\n`init`: Checks if the user is already logged in and navigates to the home screen if so.\\n\\n`signup`: Handles the user sign-up process, including creating a new user in Firebase Authentication and storing user data in the Firebase Realtime Database.\\n\\n`login`: Handles the user login process, including authenticating the user with Firebase Authentication and navigating to the home screen upon successful login.\\n\\n`adminlogin`: Handles the admin login process, including authenticating the admin user with Firebase Authentication and navigating to the home screen upon successful login.\\n\\n`logout`: Signs out the current user and navigates to the home screen.\\n\\n`isLoggedIn`: Checks if the user is currently logged in.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/models/Account.kt\&quot;:\&quot;This file contains a single class:\\n\\n`Account`: A data class that represents an account with properties such as name, email, title, image URL, and ID.\\n\\nThe file does not contain any functions, but rather defines the properties and constructor methods for the `Account` class.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/CurrenciesSection.kt\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`Clothing`: A list of clothing items with their names, buy and sell prices, and icons.\\n\\n`CurrenciesSection`: A composable function that displays a section for currencies, including a header and a list of currency items.\\n\\n`CurrencyItem`: A composable function that displays a single currency item with its name, buy and sell prices, and an icon.\\n\\nThis file is a part of a banking app UI implementation using Jetpack Compose. It defines a section for displaying currency information, including a header and a list of currency items.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/screens/Walletscreen.kt\&quot;:\&quot;This file contains a single Composable function `WalletScreen` that represents a screen in a banking app UI, displaying various sections such as Wallet, Cards, Finance, and Currencies.\\n\\n`WalletScreen`: A Composable function that creates a Scaffold with a bottom navigation bar and a column of different sections related to a user\\u0027s wallet and finances.\\n\\n`WalletScreenPreview`: A Composable function that provides a preview of the `WalletScreen` in the Android Studio preview.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/data/Clothing.kt\&quot;:\&quot;This file defines a single data class `Clothing` that represents a clothing item with a name, buy price, sell price, and an icon.\\n\\n`Clothing`: A data class that represents a clothing item with a name, buy price, sell price, and an icon.\&quot;,\&quot;/app/src/test/java/com/example/cleanhomes111/ExampleUnitTest.kt\&quot;:\&quot;This file contains a single unit test class with one test function. The file does not define any classes or functions, but rather contains a single unit test that checks if the addition operation `2 + 2` is correct.\\n\\n`ExampleUnitTest`: A unit test class that contains a single test function to verify the correctness of a simple addition operation.\\n\\n`addition_isCorrect()`: A test function that checks if the addition operation `2 + 2` returns the expected result of `4`.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/FinanceSection.kt\&quot;:\&quot;This file appears to be a Kotlin file that defines a finance-related UI component for an Android app using Jetpack Compose.\\n\\n`Finance`: A data class that represents a finance-related item with an icon, name, and background color.\\n\\n`FinanceSection`: A composable function that displays a section of finance-related items in a lazy row.\\n\\n`FinanceItem`: A composable function that displays a single finance-related item with an icon, name, and background color.\\n\\nThe file also defines a list of `Finance` objects that are used to populate the `FinanceSection` and `FinanceItem` composables.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/data/Finance.kt\&quot;:\&quot;This file defines a data class `Finance` that represents a financial item with an icon, name, and background color.\\n\\n`Finance`: A data class that represents a financial item with an icon, name, and background color.\\n\\nThe file does not contain any functions, but rather defines a data class that can be used to represent financial items in an application.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/ui/theme/Color.kt\&quot;:\&quot;This file defines a set of color values for a banking app UI using Jetpack Compose. It does not contain any classes or functions, but rather defines a set of color variables that can be used throughout the app\\u0027s UI.\\n\\n`Purple80`: A dark purple color.\\n`PurpleGrey80`: A dark purple-grey color.\\n`Pink80`: A dark pink color.\\n`Purple40`: A lighter purple color.\\n`PurpleGrey40`: A lighter purple-grey color.\\n`Pink40`: A lighter pink color.\\n`PurpleStart`: The starting color of a purple gradient.\\n`PurpleEnd`: The ending color of a purple gradient.\\n`BlueStart`: The starting color of a blue gradient.\\n`BlueEnd`: The ending color of a blue gradient.\\n`OrangeStart`: The starting color of an orange gradient.\\n`OrangeEnd`: The ending color of an orange gradient.\\n`GreenStart`: The starting color of a green gradient.\\n`GreenEnd`: The ending color of a green gradient.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/screens/Dashboard.kt\&quot;:\&quot;This file contains the implementation of the `HomeScreen` composable function, which is responsible for rendering the home screen of a cleaning services app. It includes several other composable functions that make up the different sections of the home screen, such as the top bar, special offers, categories, popular services, and bottom navigation bar.\\n\\n`HomeScreen`: Renders the main home screen of the cleaning services app.\\n\\n`TopBar`: Displays the location information and a search bar at the top of the home screen.\\n\\n`fetchLocation`: Fetches the user\\u0027s location and converts it to a readable address.\\n\\n`getReadableAddress`: Converts latitude and longitude coordinates into a readable address.\\n\\n`SearchBar`: Renders the search bar component.\\n\\n`SpecialForYouSection`: Displays a section for special offers.\\n\\n`CategoriesSection`: Displays a section for different service categories.\\n\\n`CategoryItem`: Renders a single category item.\\n\\n`PopularServicesSection`: Displays a section for popular services.\\n\\n`BottomNavigationBar`: Renders the bottom navigation bar with icons and labels.\\n\\n`BottomNavigation`: Represents a single item in the bottom navigation bar.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/screens/Splashscreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`SplashScreen`: A Composable function that displays a splash screen with the app\\u0027s title, and after a 2-second delay, navigates to the login screen.\\n\\nThe file appears to be a part of a Jetpack Compose-based Android application, and it defines a splash screen that is displayed when the app is launched, before the user is taken to the login screen.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/Color.kt\&quot;:\&quot;This file defines a set of color values for a Compose-based Android application. It does not contain any classes or functions, but rather a collection of color constants that can be used throughout the application\\u0027s user interface.\\n\\n`PrimaryColor`: A primary color used in the application\\u0027s design.\\n`SecondaryColor`: A secondary color used in the application\\u0027s design.\\n`BackgroundColor`: The background color used in the application\\u0027s design.\\n`SurfaceColor`: A surface color used in the application\\u0027s design.\\n`TextColor`: The color used for text in the application.\\n`Purple80`, `PurpleGrey80`, `Pink80`, `Purple40`, `PurpleGrey40`, `Pink40`: Additional color values used in the application\\u0027s design.\\n`PurpleStart`, `PurpleEnd`, `BlueStart`, `BlueEnd`, `OrangeStart`, `OrangeEnd`, `GreenStart`, `GreenEnd`: Color gradient values used in the application\\u0027s design.\&quot;,\&quot;/settings.gradle.kts\&quot;:\&quot;This file is a Gradle configuration file for an Android project. It does not contain any classes or functions, but rather defines the project\\u0027s build settings and dependencies.\\n\\n`pluginManagement`: Configures the plugin repositories to be used for the project, including Google, Maven Central, and the Gradle Plugin Portal.\\n\\n`dependencyResolutionManagement`: Configures the dependency resolution settings for the project, including the repositories to be used and the behavior when project-specific repositories are encountered.\\n\\n`rootProject.name`: Sets the name of the root project to \\\&quot;CleanHomes111\\\&quot;.\\n\\n`include(\\\&quot;:app\\\&quot;)`: Includes the \\\&quot;:app\\\&quot; module in the project.\\n\\nOverall, this file sets up the build environment and dependency management for an Android project, ensuring that the necessary repositories and plugins are available for the project\\u0027s development.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/ui/theme/Type.kt\&quot;:\&quot;This file defines the typography styles for a Compose-based Android application. It sets the default text style for the `bodyLarge` component, and provides commented-out examples for other text styles such as `titleLarge` and `labelSmall`.\\n\\n`Typography`: Defines the set of Material typography styles to be used in the application.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/MainActivity.kt\&quot;:\&quot;This file appears to be the main activity class for an Android application called \\\&quot;CleanHomes111\\\&quot;. It sets up the app\\u0027s navigation and theme, and initializes the Firebase SDK. Here\\u0027s a breakdown of the classes and functions in the file:\\n\\n`MainActivity`: The main activity class that sets up the app\\u0027s content and navigation.\\n\\n`SetBarColor`: A composable function that sets the color of the system UI bars (status bar, navigation bar) to match the app\\u0027s theme.\\n\\nOverall, this file serves as the entry point for the Android application, initializing the necessary components and setting up the app\\u0027s visual appearance and navigation.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/data/Card.kt\&quot;:\&quot;This file defines a single data class `Card` that represents a bank card with various properties such as card type, card number, card name, balance, and color.\\n\\n`Card`: A data class that represents a bank card with various properties such as card type, card number, card name, balance, and color.\&quot;,\&quot;/app/build.gradle.kts\&quot;:\&quot;This file is a Gradle build script for an Android application. It sets up the project configuration, dependencies, and build settings for the application. The file does not contain any classes or functions, but rather defines the following:\\n\\n`plugins`: Specifies the Android application and Kotlin Android plugins to be used in the project.\\n\\n`android`: Configures the Android-specific settings, such as the namespace, compile SDK version, default app settings, build types, and Compose-related settings.\\n\\n`dependencies`: Declares the external libraries and dependencies to be used in the project, including Android Core, Lifecycle, Compose, Firebase, Google Play Services, and various testing frameworks.\\n\\nOverall, this file sets up the necessary configuration and dependencies for building an Android application that uses Jetpack Compose and integrates with Firebase services.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/WalletSection.kt\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`WalletSection`: This function creates a UI component that displays the user\\u0027s wallet balance and provides a search icon.\\n\\nThe file appears to be a Jetpack Compose UI component that represents a section of a banking app\\u0027s user interface. It displays the user\\u0027s wallet balance and provides a search icon for the user to interact with.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/models/User.kt\&quot;:\&quot;This file contains a single class:\\n\\n`User`: A class that represents a user with properties for name, email, password, and id.\\n\\nThe file does not contain any functions, only a constructor for the `User` class.\&quot;,\&quot;/app/src/androidTest/java/com/example/cleanhomes111/ExampleInstrumentedTest.kt\&quot;:\&quot;This file contains an instrumented test for an Android app. It does not define any classes or functions, but rather tests the context of the app under test.\\n\\n`ExampleInstrumentedTest`: This is an instrumented test class that runs on an Android device and checks if the package name of the app under test is correct.\\n\\n`useAppContext()`: This function retrieves the context of the app under test and asserts that the package name is correct.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/screens/Loginscreen.kt\&quot;:\&quot;This file contains a Composable function `LoginScreen` that represents the login screen of a mobile application. It includes the following classes and functions:\\n\\n`isValidEmail`: Checks if the provided email is a valid email address.\\n\\n`isValidPassword`: Checks if the provided password is at least 6 characters long.\\n\\n`LoginScreen`: Composable function that creates the login screen, including input fields for email and password, a sign-in button, and a sign-up button. It also handles the login and admin login functionality using an `AuthViewModel`.\\n\\nThe file also includes a `LoginScreenPreview` Composable function that provides a preview of the `LoginScreen` in the Android Studio preview.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/Theme.kt\&quot;:\&quot;This file defines the theme and color scheme for the \\\&quot;CleanHomes111\\\&quot; and \\\&quot;BankningAppUI\\\&quot; Android applications using Jetpack Compose.\\n\\n`CleanHomes111Theme`: A Composable function that sets the theme and color scheme for the \\\&quot;CleanHomes111\\\&quot; application based on the system\\u0027s dark mode setting and the availability of dynamic color on Android 12+.\\n\\n`BankningAppUITheme`: A Composable function that sets the theme and color scheme for the \\\&quot;BankningAppUI\\\&quot; application based on the system\\u0027s dark mode setting and the availability of dynamic color on Android 12+. It also sets the status bar color and appearance to match the chosen theme.\\n\\nThe file also defines the `DarkColorScheme` and `LightColorScheme` objects, which specify the color palette for the dark and light themes, respectively.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/ui/theme/Theme.kt\&quot;:\&quot;This file defines the theme for a banking app UI using Jetpack Compose. It includes the following:\\n\\n`DarkColorScheme`: A dark color scheme for the app\\u0027s theme.\\n\\n`LightColorScheme`: A light color scheme for the app\\u0027s theme.\\n\\n`BankningAppUITheme`: A composable function that sets up the app\\u0027s theme based on the system\\u0027s dark mode setting and the device\\u0027s Android version.\\n\\nThe file sets up the color schemes, typography, and other theme-related properties for the app\\u0027s UI, and it also handles the status bar color and appearance based on the chosen theme.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/navigation/Routes.kt\&quot;:\&quot;This file does not contain any classes or functions. Instead, it defines a set of constants representing different routes or destinations within the application. The purpose of this file is to provide a centralized location for defining and managing the different navigation routes used in the application.\\n\\nThe constants defined in this file are:\\n\\n`ROUT_HOME`: Represents the route for the home screen of the application.\\n`ROUT_SIGNUP`: Represents the route for the sign-up screen of the application.\\n`ROUT_LOGIN`: Represents the route for the login screen of the application.\\n`ROUTE_WALLET`: Represents the route for the wallet screen of the application.\&quot;,\&quot;/google-services (2).json\&quot;:\&quot;This file appears to be a JSON configuration file for a Firebase project. It does not contain any classes or functions, but rather provides information about the project, such as the project number, project ID, and storage bucket. The file also includes client information, such as the mobile SDK app ID and the Android client package name. Additionally, it includes an API key and information about the app invite service. Overall, this file is used to configure the Firebase project and its associated services.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/data/BottomNavigation.kt\&quot;:\&quot;This file defines a data class `BottomNavigation` that represents an item in a bottom navigation menu. It contains two properties: `title` (a `String` representing the title of the item) and `icon` (an `ImageVector` representing the icon of the item).\\n\\n`BottomNavigation`: A data class that represents an item in a bottom navigation menu, containing a title and an icon.\&quot;,\&quot;/build.gradle.kts\&quot;:\&quot;This file is a top-level build file that sets up common configuration options for all sub-projects or modules in the Android application. It does not contain any classes or functions, but instead, it sets up the following plugins:\\n\\n`alias(libs.plugins.android.application) apply false`: Applies the Android application plugin to the project.\\n`alias(libs.plugins.kotlin.android) apply false`: Applies the Kotlin Android plugin to the project.\\n`alias(libs.plugins.google.gms.google.services) apply false`: Applies the Google Play Services plugin to the project.\\n\\nThe purpose of this file is to provide a centralized location for defining common configuration options that can be shared across all sub-projects or modules in the Android application.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/BottomNavigationBar.kt\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`items`: A list of `BottomNavigation` objects, each representing a navigation item in the bottom navigation bar.\\n\\n`BottomNavigationBar()`: A Composable function that creates a bottom navigation bar with the items defined in the `items` list.\\n\\nThis file is responsible for creating a bottom navigation bar with four navigation items: Home, Wallet, Notifications, and Account. The navigation bar is implemented using Jetpack Compose, a declarative UI framework for Android.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/navigation/AppNavHost.kt\&quot;:\&quot;This file defines the navigation structure for a Compose-based Android application. It contains the following components:\\n\\n`AppNavHost`: A composable function that sets up the navigation graph for the application, including the screens for Home, Signup, Login, and Wallet.\\n\\n`HomeScreen`: Composable function that represents the home screen of the application.\\n\\n`SignupScreen`: Composable function that represents the signup screen of the application.\\n\\n`LoginScreen`: Composable function that represents the login screen of the application.\\n\\n`WalletScreen`: Composable function that represents the wallet screen of the application.\\n\\nThe file sets up the navigation routes and handles the navigation between the different screens of the application using the Jetpack Compose Navigation library.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/MainActivity.kt\&quot;:\&quot;This file appears to be an Android Compose-based UI for a banking app. It defines the main `MainActivity` class and several composable functions that make up the UI. Here\\u0027s a summary of the classes and functions:\\n\\n`MainActivity`: The main activity that sets up the UI and applies the app\\u0027s theme.\\n\\n`SetBarColor`: A composable function that sets the system UI bar color to match the app\\u0027s background color.\\n\\n`WalletScreen`: A composable function that defines the main screen layout, including sections for wallet, cards, finance, currencies, and a bottom navigation bar.\\n\\n`WalletSection`, `CardsSection`, `FinanceSection`, `CurrenciesSection`, `BottomNavigationBar`: Composable functions that define the individual sections and components of the UI.\\n\\nOverall, this file provides the implementation of the main UI for a banking app, using Jetpack Compose to create a responsive and visually appealing interface.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/CardsSection.kt\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`getGradient`: This function takes two `Color` parameters and returns a `Brush` object that represents a horizontal gradient between the two colors.\\n\\n`CardsSection`: This function creates a `LazyRow` that displays a list of `CardItem` components.\\n\\n`CardItem`: This function takes an `index` parameter and creates a `Column` that displays a credit card with information such as the card type, card number, card name, and balance.\\n\\nThe file also defines a `cards` list that contains information about four different credit cards, including the card type, card number, card name, balance, and a gradient color.\\n\\nOverall, this file appears to be part of a banking app UI that displays a list of credit cards with various information and visual styles.\&quot;,\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/data/AccountViewModel.kt\&quot;:\&quot;This file contains the `AccountViewModel` class and several functions related to account management in a Firebase-based application.\\n\\n`AccountViewModel`: A class that handles the logic for managing user accounts, including adding, viewing, updating, and deleting accounts.\\n\\n`addAccount`: Adds a new account to the Firebase database, including uploading an image to Firebase Storage and saving the account details.\\n\\n`ViewAccount`: Retrieves all the accounts from the Firebase database and updates the account list.\\n\\n`updateAccount`: Removes an existing account from the Firebase database.\\n\\n`deleteAccount`: Deletes an existing account from the Firebase database.\\n\\nThe file also includes an `AuthViewModel` class, which is used to handle user authentication, and a `ProgressDialog` to display a loading indicator during account-related operations.\&quot;}&quot;}" />
    <option name="fileSkeletonMaps" value="{&quot;C:/Users/Admin/AndroidStudioProjects/CleanHomes111&quot;:&quot;{\&quot;/app/src/androidTest/java/com/example/cleanhomes111/ExampleInstrumentedTest.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/androidTest/java/com/example/cleanhomes111/ExampleInstrumentedTest.kt\&quot;,\&quot;file_name\&quot;:\&quot;ExampleInstrumentedTest.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/data/BottomNavigation.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/data/BottomNavigation.kt\&quot;,\&quot;file_name\&quot;:\&quot;BottomNavigation.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/data/Card.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/data/Card.kt\&quot;,\&quot;file_name\&quot;:\&quot;Card.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/data/Clothing.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/data/Clothing.kt\&quot;,\&quot;file_name\&quot;:\&quot;Clothing.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/data/Finance.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/data/Finance.kt\&quot;,\&quot;file_name\&quot;:\&quot;Finance.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/ui/theme/Color.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/ui/theme/Color.kt\&quot;,\&quot;file_name\&quot;:\&quot;Color.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/ui/theme/Theme.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/ui/theme/Theme.kt\&quot;,\&quot;file_name\&quot;:\&quot;Theme.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/ui/theme/Type.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/ui/theme/Type.kt\&quot;,\&quot;file_name\&quot;:\&quot;Type.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/BottomNavigationBar.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/BottomNavigationBar.kt\&quot;,\&quot;file_name\&quot;:\&quot;BottomNavigationBar.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/CardsSection.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/CardsSection.kt\&quot;,\&quot;file_name\&quot;:\&quot;CardsSection.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/CurrenciesSection.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/CurrenciesSection.kt\&quot;,\&quot;file_name\&quot;:\&quot;CurrenciesSection.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/FinanceSection.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/FinanceSection.kt\&quot;,\&quot;file_name\&quot;:\&quot;FinanceSection.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/MainActivity.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/MainActivity.kt\&quot;,\&quot;file_name\&quot;:\&quot;MainActivity.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/WalletSection.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/bankningappui/WalletSection.kt\&quot;,\&quot;file_name\&quot;:\&quot;WalletSection.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/data/AccountViewModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/data/AccountViewModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;AccountViewModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/data/AuthViewModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/data/AuthViewModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;AuthViewModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/models/Account.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/models/Account.kt\&quot;,\&quot;file_name\&quot;:\&quot;Account.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/models/User.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/models/User.kt\&quot;,\&quot;file_name\&quot;:\&quot;User.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/navigation/AppNavHost.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/navigation/AppNavHost.kt\&quot;,\&quot;file_name\&quot;:\&quot;AppNavHost.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/navigation/Routes.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/navigation/Routes.kt\&quot;,\&quot;file_name\&quot;:\&quot;Routes.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/screens/Dashboard.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/screens/Dashboard.kt\&quot;,\&quot;file_name\&quot;:\&quot;Dashboard.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/screens/Loginscreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/screens/Loginscreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;Loginscreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/screens/Signupscreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/screens/Signupscreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;Signupscreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/screens/Splashscreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/screens/Splashscreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;Splashscreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/screens/Walletscreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/screens/Walletscreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;Walletscreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/Color.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/Color.kt\&quot;,\&quot;file_name\&quot;:\&quot;Color.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/Theme.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/Theme.kt\&quot;,\&quot;file_name\&quot;:\&quot;Theme.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/Type.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/ui/theme/Type.kt\&quot;,\&quot;file_name\&quot;:\&quot;Type.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/cleanhomes111/MainActivity.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/cleanhomes111/MainActivity.kt\&quot;,\&quot;file_name\&quot;:\&quot;MainActivity.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/test/java/com/example/cleanhomes111/ExampleUnitTest.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/test/java/com/example/cleanhomes111/ExampleUnitTest.kt\&quot;,\&quot;file_name\&quot;:\&quot;ExampleUnitTest.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/build.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/app/build.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;build.gradle.kts\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/google-services.json\&quot;:{\&quot;file_path\&quot;:\&quot;/app/google-services.json\&quot;,\&quot;file_name\&quot;:\&quot;google-services.json\&quot;,\&quot;methods\&quot;:[]},\&quot;/build.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/build.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;build.gradle.kts\&quot;,\&quot;methods\&quot;:[]},\&quot;/google-services (2).json\&quot;:{\&quot;file_path\&quot;:\&quot;/google-services (2).json\&quot;,\&quot;file_name\&quot;:\&quot;google-services (2).json\&quot;,\&quot;methods\&quot;:[]},\&quot;/settings.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/settings.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;settings.gradle.kts\&quot;,\&quot;methods\&quot;:[]}}&quot;}" />
  </component>
</project>